from math import sqrt, ceil, log

costs = [1, 1]
calculations = [1, 1]

number = int(input("Enter any number: "))

def multiply(x):
    factors = []
    for i in range(2, x // 2 + 1):
        if x % i == 0:
            factors.append(i)

    min_cost = x
    calculation = x
    for i in range(len(factors)):
        if costs[factors[i]] + costs[factors[len(factors) - 1 - i]] < min_cost:
            min_cost = costs[factors[i]] + costs[factors[len(factors) - 1 - i]]
            calculation = f"{factors[i]}*{factors[len(factors) - 1 - i]}"

    return min_cost, calculation

def add(x):
    min_cost = x
    calculation = x
    for i in range(1, x // 2 + 1):
        if costs[i] + costs[x - i] < min_cost:
            min_cost = costs[i] + costs[x - i]
            calculation = f"{i}+{x - i}"

    return min_cost, calculation

def pred(x):
    min_cost = x
    calculation = x
    for i in range(x, 0, -1):
        if costs[i] + 1 < costs[i-1]:
            costs[i-1] = costs[i] + 1
            calculations[i-1] = f"P({i})"
    return min_cost, calculation


def main():
    for j in range(2, number + 1):
        costs.append(j)
        calculations.append(j)

    function_list = [multiply, add, pred]
    for j in range(1, number + 1):
        min_cost = costs[j]
        calculation = calculations[j]
        for f in function_list:
            y, c = f(j)
            if y < min_cost:
                min_cost = y
                calculation = c

        costs[j] = min_cost
        calculations[j] = calculation
     
    max_width_number = max(len(str(number)), len('Number'))
    max_width_cost = max(max(len(str(cost)) for cost in costs), len('Cost'))
    max_width_calculation = max(max(len(str(calculation)) for calculation in calculations), len('Calculation'))
    
    print(f"{'Number'.ljust(max_width_number)} {'Cost'.ljust(max_width_cost)} {'Calculation'.ljust(max_width_calculation)}")

    for i in range(1, number + 1):
        print(f"{str(i).ljust(max_width_number)} {str(costs[i]).ljust(max_width_cost)} {str(calculations[i]).ljust(max_width_calculation)}")

if __name__ == "__main__":
    main()
